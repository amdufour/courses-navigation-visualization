/*! project-name v0.0.1 | (c) 2021 YOUR NAME | MIT License | http://link-to-your-git-repo.com */
function prepData(){let e=-1;const t=[],s=[];let n;data.forEach(e=>{e.topics=e.topics.split(", "),e.concepts=e.concepts.split(", "),e.skills=e.skills.split(", "),e.languages_and_libraries=e.languages_and_libraries.split(", "),e.title=[e.title],e.value=1}),console.log(data);const a=s=>{const a={name:s};t.push(a),nodeByKey.set(n,a),indexByKey.set(n,++e)};for(const e of keys)for(const t of data){let s="";if("object"==typeof t[e.id])for(const o of t[e.id])s=o,n=JSON.stringify([e.id,s]),nodeByKey.has(n)||a(s);else{if(s=t[e.id],n=JSON.stringify([e.id,s]),nodeByKey.has(n))continue;a(s)}}for(let e=1;e<keys.length;++e){const t=keys[e-1].id,n=keys[e].id,a=[];keys.slice(0,e+1).forEach(e=>{a.push(e.id)});const o=new Map;for(const i of data){const l=a.map(e=>i[e]);let c=i[t].length*i[n].length;for(const a of l[e-1])for(const d of l[e]){const e=[a,d],f=JSON.stringify(e),r=i.value/c;let y=o.get(f);y?y.value+=r:(y={source:indexByKey.get(JSON.stringify([t,a])),target:indexByKey.get(JSON.stringify([n,d])),names:l,value:r},s.push(y),o.set(f,y))}}}graphData={nodes:t,links:s},createSankey()}d3.csv("../data/data.csv").then(e=>{data=e,prepData()});